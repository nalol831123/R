html <- htmlParse(GET(Hito.url[i]),encoding = "UTF-8")
message.list <- xpathSApply(html, "//div[@class='push']/span[@class='f3 push-content']", xmlValue)
message <- unlist(message.list)
d.corpus <- VCorpus( VectorSource(message) )
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
d.corpus <- tm_map(d.corpus, function(word) {
gsub("[A-Za-z0-9]", "", word)
})
abc <- data.frame(table(cc[as.character(d.corpus)]))
colnames(abc) <- c("word", as.character(i))
if(i == 1){
HitoTDF <- abc}
else{
HitoTDF <- merge(HitoTDF, abc, by = "word", all = T)}
}
library(ggplot2)
library(ggthemes)
install.packages("ggthemes")
library(scales)
library(plyr)
library(dplyr)
library(mice)
install.packages("mice")
library(mice)
library(lattice)
library(randomForest)
library(party)
install.packages("party")
library(party)
library(corrplot)
train <- read.csv("titanicTrain.csv", stringsAsFactors = F, na.strings = c("NA", ""))
setwd("C:/Users/User/Desktop/R/R/project3")
train <- read.csv("titanicTrain.csv", stringsAsFactors = F, na.strings = c("NA", ""))
Question <- read.csv("titanicQuestion.csv", stringsAsFactors = F, na.strings = c("NA", ""))
str(train)
str(Question)
data <- bind_rows(train, Question)
summary(data)
sapply(data, function(x) sum(is.na(x)))
sapply(data, function(x) sum(x == ""))
data$Survived <- factor(data$Survived)
ggplot(data = full[1:nrow(train),],aes(x = Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab('Pclass') +
ylab('乘客數量') +
ggtitle('不同客艙對存活率影響') +
scale_fill_manual(values = c("red","green")) +
theme_economist(base_size=16)+
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), vjust=-0.5)
data$Survived <- factor(data$Survived)
ggplot(data = data[1:nrow(train),],aes(x = Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab('Pclass') +
ylab('乘客數量') +
ggtitle('不同客艙對存活率影響') +
scale_fill_manual(values = c("red","green")) +
theme_economist(base_size=16)+
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), vjust=-0.5)
library(ggplot2)
data$Survived <- factor(data$Survived)
ggplot(data = data[1:nrow(train),],aes(x = Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab('Pclass') +
ylab('乘客數量') +
ggtitle('不同客艙對存活率影響') +
scale_fill_manual(values = c("red","green")) +
theme_economist(base_size=16)+
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), vjust=-0.5)
data$Survived <- factor(data$Survived)
ggplot(data = data[1:nrow(train),], mapping = aes(x = Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab('Pclass') +
ylab('Count') +
ggtitle('Different Pclass impact survived') +
scale_fill_manual(values=c("#FF0000", "#00FF00")) +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$Survived <- factor(data$Survived)
ggplot(data = data[1:nrow(train),], mapping = aes(x = Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab('Pclass') +
ylab('Count') +
ggtitle('Different Pclass impact survived') +
scale_fill_manual(values=c("#FF0000", "#00FF00")) +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$Survived <- factor(data$Survived)
ggplot(data = data[1:nrow(train),], mapping = aes(x = Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab("客艙等級") +
ylab("乘客數量") +
ggtitle("不同客艙等級對乘客存活率影響") +
scale_fill_manual(values=c("#FF0000", "#00FF00")) +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
library(ggplot)
install.packages("ggplot")
library(ggplot)
data$Survived <- factor(data$Survived)
ggplot(data = data[1:nrow(train),], mapping = aes(x = Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab("客艙等級") +
ylab("乘客數量") +
ggtitle("不同客艙等級對乘客存活率影響") +
scale_fill_manual(values=c("#FF0000", "#00FF00")) +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
library(ggplot2)
data$Survived <- factor(data$Survived)
ggplot(data = data[1:nrow(train),], mapping = aes(x = Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab("客艙等級") +
ylab("乘客數量") +
ggtitle("不同客艙等級對乘客存活率影響") +
scale_fill_manual(values=c("#FF0000", "#00FF00")) +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$Survived <- factor(data$Survived)
ggplot(data = data[1:nrow(train),], mapping = aes(x = data$Pclass, y = ..count.., fill=Survived)) +
geom_bar(stat = "count", position='dodge') +
xlab("客艙等級") +
ylab("乘客數量") +
ggtitle("不同客艙等級對乘客存活率影響") +
scale_fill_manual(values=c("#FF0000", "#00FF00")) +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$Survived <- factor(data$Survived)
data$Survived <- factor(data$Survived)
data$survived <- factor(data$survived)
ggplot(data = data[1:nrow(train),], mapping = aes(x = pclass, y = ..count.., fill=survived)) +
geom_bar(stat = "count", position='dodge') +
xlab("客艙等級") +
ylab("乘客數量") +
ggtitle("不同客艙等級對乘客存活率影響") +
scale_fill_manual(values=c("#FF0000", "#00FF00")) +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$Title <- sapply(data$name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
data$Title <- sub(" ","",data$Title)
table(data$Title)
Others <- c('Capt','Col','Don','Dona','Jonkheer','Lady','Major','Sir','the Countess')
data$Title[data$Title=='Mlle'] <- 'Miss'
data$Title[data$Title=='Mme'] <- 'Mrs'
data$Title[data$Title=='Ms'] <- 'Miss'
data$Title[data$Title %in% Others] <- 'Others'
table(data$Title)
ggplot(data = data[1:891,], mapping = aes(x = Title, y = ..count.., fill=survived)) +
geom_bar(stat = "count", position='stack') +
xlab('Title') +
ylab('Count') +
ggtitle('Different Title impact survivor') +
scale_fill_discrete(name="survived", breaks=c(0, 1), labels=c("0", "1")) +
geom_text(stat = "count", aes(label = ..count..), position=position_stack(vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$sex <- as.factor(data$sex)
ggplot(data = data[1:891,], mapping = aes(x = sex, y = ..count.., fill=survived)) +
geom_bar(stat = 'count', position='dodge') +
xlab('sex') +
ylab('count') +
ggtitle('Different Sex impact survivor') +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
ggplot(data = data[1:891,], mapping = aes(x = sibsp, y = ..count.., fill=survived)) +
geom_bar(stat = 'count', position='dodge') +
labs(title = "Different SibSp impact survivor", x = "sibsp", y = "Count", fill = "survived") +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
scale_x_continuous(breaks = c(0:8)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
ggplot(data = data[1:891,], mapping = aes(x = parch, y = ..count.., fill=survived)) +
geom_bar(stat = 'count', position='dodge') +
labs(title = "Different Parch impact survivor", x = "Parch", y = "Count", fill = "Survived") +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
scale_x_continuous(breaks = c(0:6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$FamilySize <- data$sibSp + data$parch + 1
data$FamilySize
ggplot(data = data[1:891,], mapping = aes(x = FamilySize, y = ..count.., fill=survived)) +
geom_bar(stat = 'count', position='dodge') +
xlab('FamilySize') +
ylab('Count') +
ggtitle('Different FamilySize impact survivor') +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
scale_x_continuous(breaks = c(0:11)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$FamilySize <- data$sibSp + data$parch + 1
data$FamilySize <- data$sibsp + data$parch + 1
data$FamilySize
ggplot(data = data[1:891,], mapping = aes(x = FamilySize, y = ..count.., fill=survived)) +
geom_bar(stat = 'count', position='dodge') +
xlab('FamilySize') +
ylab('Count') +
ggtitle('Different FamilySize impact survivor') +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
scale_x_continuous(breaks = c(0:11)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
ggplot(data[!is.na(data$survived),],aes(age,color=survived))+
geom_line(aes(label=..count..), stat = 'bin', binwidth=5)  +
labs(title = "Different Age impact survivor", x = "Age", y = "Count", fill = "Survived")+
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$age_New[data$age < 18] <- 'child'
data$age_New[data$age >= 18] <- 'adult'
data$age_New
table(data$age_New,data$survived)
ggplot(data[!is.na(data$survived),],aes(age_New,fill=survived))+
geom_bar(stat = 'count',position = 'dodge')+
ggtitle('Adult and Child  Impact Survivor')+
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
ticket.count <- aggregate(data$ticket, by = list(data$ticket), function(x) sum(!is.na(x)))
ticket.count
table(ticket.count$x)
ggplot(data = data[!is.na(data$survived) ,], aes(x = fare, color=survived)) +
geom_line(aes(label=..count..), stat = 'bin', binwidth=10)  +
labs(title = "Different Fare impact survivor", x = "Fare", y = "Count", fill = "Survived")+
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
ggplot(data[1:891, ], mapping = aes(x = embarked, y = ..count.., fill = survived)) +
geom_bar(stat = 'count', position='dodge') +
xlab('Embarked') +
ylab('Count') +
ggtitle('Different Embarked impact survivor') +
geom_text(stat = "count", aes(label = ..count..), position=position_dodge(width=1), , vjust=-0.5) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
data$pclass <- factor(data$pclass)
data$title <- factor(data$title)
data$sex <- factor(data$sex)
data$age_New <- factor(data$age_New)
data$FamilySize <- factor(data$FamilySize)
data$fare <- factor(data$fare)
data$embarked <- factor(data$embarked)
train <- data[1:1001,]
test <- data[1002:1619,]
set.seed(102)
model <- cforest(survived ~ pclass + title + sex + Age_New + FamilySize + fare + embarked, data = train,controls = cforest_unbiased(ntree=2000,mtry=3))
library(randomForest)
data$pclass <- factor(data$pclass)
data$title <- factor(data$title)
data$sex <- factor(data$sex)
data$age_New <- factor(data$age_New)
data$FamilySize <- factor(data$FamilySize)
data$fare <- factor(data$fare)
data$embarked <- factor(data$embarked)
train <- data[1:1001,]
test <- data[1002:1619,]
set.seed(102)
model <- cforest(survived ~ pclass + title + sex + Age_New + FamilySize + fare + embarked, data = train,controls = cforest_unbiased(ntree=2000,mtry=3))
library(corrplot)
data$pclass <- factor(data$pclass)
data$title <- factor(data$title)
data$sex <- factor(data$sex)
data$age_New <- factor(data$age_New)
data$FamilySize <- factor(data$FamilySize)
data$fare <- factor(data$fare)
data$embarked <- factor(data$embarked)
train <- data[1:1001,]
test <- data[1002:1619,]
set.seed(102)
model <- cforest(survived ~ pclass + title + sex + Age_New + FamilySize + fare + embarked, data = train,controls = cforest_unbiased(ntree=2000,mtry=3))
library(randomForest)
library(party)
library(corrplot)
ata$pclass <- factor(data$pclass)
data$title <- factor(data$title)
data$sex <- factor(data$sex)
data$age_New <- factor(data$age_New)
data$FamilySize <- factor(data$FamilySize)
data$fare <- factor(data$fare)
data$embarked <- factor(data$embarked)
train <- data[1:1001,]
test <- data[1002:1619,]
set.seed(102)
model <- cforest(survived ~ pclass + title + sex + Age_New + FamilySize + fare + embarked, data = train,controls = cforest_unbiased(ntree=2000,mtry=3))
data$pclass <- factor(data$pclass)
data$title <- factor(data$title)
data$sex <- factor(data$sex)
data$age_New <- factor(data$age_New)
data$FamilySize <- factor(data$FamilySize)
data$fare <- factor(data$fare)
data$embarked <- factor(data$embarked)
train <- data[1:1001,]
test <- data[1002:1619,]
set.seed(102)
model <- cforest(survived ~ pclass + title + sex + age_New + FamilySize + fare + embarked, data = train,controls = cforest_unbiased(ntree=2000,mtry=3))
data$pclass <- factor(data$pclass)
data$Title <- factor(data$Title)
data$sex <- factor(data$sex)
data$age_New <- factor(data$age_New)
data$FamilySize <- factor(data$FamilySize)
data$fare <- factor(data$fare)
data$embarked <- factor(data$embarked)
train <- data[1:1001,]
test <- data[1002:1619,]
set.seed(102)
model <- cforest(survived ~ pclass + Title + sex + age_New + FamilySize + fare + embarked, data = train,controls = cforest_unbiased(ntree=2000,mtry=3))
sapply(data, function(x) sum(is.na(x)))
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + Fsize, data=full[!is.na(full$age), ], method='anova')
full$age[is.na(full$age)] <- predict(age.model, full[is.na(full$age), ])
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=full[!is.na(full$age), ], method='anova')
full$age[is.na(full$age)] <- predict(age.model, full[is.na(full$age), ])
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=data[!is.na(data$age), ], method='anova')
data$age[is.na(data$age)] <- predict(age.model, data[is.na(data$age), ])
sapply(data, function(x) sum(is.na(x)))
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=data[!is.na(data$age), ], method='anova')
data$age[is.na(data$age)] <- predict(age.model, data[is.na(data$age), ])
sapply(full,function(x) sum(is.na(x)))
View(data)
data <- data[-1001:1310, ]
View(data)
View(data)
class(data)
data <- data[-c(1001:1310) , ]
View(data)
sapply(data, function(x) sum(is.na(x)))
embarked.na <- data$embarked
embarked.na
which(Embarked.na %in% "")
which(embarked.na %in% "")
embarked.na
which(embarked.na %in% "")
data_62
data_62 <- data[data$PassengerId == 62,]
data_62
embarked.na <- data$embarked
which(embarked.na %in% "")
which(embarked.na %in% "NA")
data_170 <- data[170,]
data_286 <- data[286,]
data_170
data_286
data_171 <- data[171,]
data_287 <- data[287,]
data_171
data_169 <- data[169,]
data_285 <- data[285,]
data_169
data_285
ggplot(data[!is.na(data$embarked),],aes(x=embarked, y=fare, data=factor(pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80), color='red', linetype='dashed', lwd=2) +
xlab('登船港口') +
ylab('票价') +
ggtitle('票价与登船港口的关系')+
scale_fill_wsj() + theme_economist(base_size=12)
data$embarked[c(169, 285)] <- "C"
data_169
data$embarked[c(169, 285)] <- "C"
data[169]
View(data)
sapply(data, function(x) sum(is.na(x)))
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=data[!is.na(data$age), ], method='anova')
data$age[is.na(data$age)] <- predict(age.model, data[is.na(data$age), ])
library(party)
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=data[!is.na(data$age), ], method='anova')
library(grid)
library(mvtnorm)
library(modeltools)
library(stats4)
library(strucchange)
library(zoo)
library(zoo)
library(sandwich)
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=data[!is.na(data$age), ], method='anova')
library(party)
library(randomForest)
library(corrplot)
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=data[!is.na(data$age), ], method='anova')
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=data[!is.na(data$age), ], method='anova')
data$age[is.na(data$age)] <- predict(age.model, data[is.na(data$age), ])
sapply(full,function(x) sum(is.na(x)))
age.model <- rpart(age ~ pclass + sex + sibsp + parch + fare + embarked + Title + FamilySize, data=data[!is.na(data$age), ], method='anova')
data$age[is.na(data$age)] <- predict(age.model, data[is.na(data$age), ])
sapply(data,function(x) sum(is.na(x)))
fare.na <- is.na(data$fare)
which(fare.na %in% TRUE)
data_1226 <- data[1226]
data_1226 <- data[1226, ]
data_1226
data_1226 <- data[which(fare.na %in% TRUE)]
data_1226 <- data[which(fare.na %in% TRUE), ]
data_1226
ggplot(data[data$embarked=='S' & data$pclass == 3,],aes(x=embarked, y=fare, fill=factor(pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80), color='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) + theme_few()
library(ggplot2)
ggplot(data[data$embarked=='S' & data$pclass == 3,],aes(x=embarked, y=fare, fill=factor(pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80), color='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) + theme_few()
ggplot(data[data$embarked=='S' & data$pclass == 3,],aes(x=embarked, y=fare, fill=factor(pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80), color='red', linetype='dashed', lwd=2)
ggplot(data[data$embarked=='S' & data$pclass == 3,],aes(x=embarked, y=fare, fill=factor(pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80), color='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) + theme_few()
ggplot(data[data$embarked=='S' & data$pclass == 3,],aes(x=embarked, y=fare, fill=factor(pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80), color='red', linetype='dashed', lwd=2) +
scale_y_continuous() + theme_few()
ggplot(data[data$embarked=='S' & data$pclass == 3,],aes(x=embarked, y=fare, fill=factor(pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80), color='red', linetype='dashed', lwd=2) +
scale_y_continuous()
ggplot(data[data$embarked=='S' & data$pclass == 3,],aes(x=embarked, y=fare, fill=factor(pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80), color='red', linetype='dashed', lwd=2) +
scale_y_continuous()
ggplot(data[data$pclass == '3' & data$embarked == 'S', ],
aes(x = fare)) +
geom_density(data = '#99d6ff', alpha=0.4) +
geom_vline(aes(xintercept=median(fare, na.rm=T)),
colour='red', linetype='dashed', lwd=1) +
scale_x_continuous(labels=dollar_format()) +
theme_economist(base_size=12)
b <- median(data$fare[data$embarked == 'S' & data$pclass == 3],na.rm = T)
data$fare[1226] <- 8.05
sapply(data,function(x) sum(is.na(x)))
data[is.na(data$age), ]
ss <- c('name','ticket','cabin','FamilySize','Survived')
mice_age <- mice(data[,!names(data) %in% ss],method = 'rf')
library(mice)
mice_age <- mice(data[,!names(data) %in% ss],method = 'rf')
data$age <- mice_output$age
mice_output <- complete(mice_age)
data$age <- mice_output$age
data$age
sapply(data,function(x) sum(is.na(x)))
View(data)
data[1001,]
data[1000,]
data$pclass <- factor(data$pclass)
data$Title <- factor(data$Title)
data$sex <- factor(data$sex)
data$age_New <- factor(data$age_New)
data$FamilySize <- factor(data$FamilySize)
data$fare <- factor(data$fare)
data$embarked <- factor(data$embarked)
train <- data[1:1000,]
test <- data[1001:1309,]
set.seed(102)
model <- cforest(survived ~ pclass + Title + sex + age_New + FamilySize + fare + embarked, data = train,controls = cforest_unbiased(ntree=2000,mtry=3))
sapply(data,function(x) sum(is.na(x)))
data$age_New[data$age < 18] <- 'child'
data$age_New[data$age >= 18] <- 'adult'
data$age_New
data$pclass <- factor(data$pclass)
data$Title <- factor(data$Title)
data$sex <- factor(data$sex)
data$age_New <- factor(data$age_New)
data$FamilySize <- factor(data$FamilySize)
data$fare <- factor(data$fare)
data$embarked <- factor(data$embarked)
train <- data[1:1000,]
test <- data[1001:1309,]
set.seed(102)
sapply(data,function(x) sum(is.na(x)))
model <- cforest(survived ~ pclass + Title + sex + age_New + FamilySize + fare + embarked, data = train,controls = cforest_unbiased(ntree=2000,mtry=3))
prediction<-predict(model,test,OOB=TRUE,type = "response")
output<-data.frame(PassengerId=test$PassengerId,Survived=prediction)
output
write.csv(output,file = "C:\Users\User\Desktop\R\R\project3\Prediction.csv",row.names = FALSE)
prediction<-predict(model,test,OOB=TRUE,type = "response")
output<-data.frame(Survived=prediction)
output
write.csv(output,file = "C:\Users\User\Desktop\R\R\project3\Prediction.csv",row.names = FALSE)
write.csv(output, file = "predict1.csv", row.names = FALSE)
View(test)
predict.result <- predict(model, data[(1+nrow(train)):(nrow(full)), ], OOB=TRUE, type = "response")
output <- data.frame(PassengerId = test$PassengerId, Survived = predict.result)
write.csv(output, file = "predict1.csv", row.names = FALSE)
View(output)
View(output)
predict.result <- predict(model, Question, OOB=TRUE, type = "response")
output <- data.frame(Survived = predict.result)
write.csv(output, file = "predict1.csv", row.names = FALSE)
predict.result <- predict(model, Question, OOB=TRUE, type = "response")
predict.result
View(test)
View(Question)
result <- predict(model, test, OOB=TRUE, type = "response")
summary(result)
View(train)
predictresult <- predict(model, test, OOB=TRUE, type = "response")
predictresult
output <- data.frame(name=test$name ,survived = predictresult)
-result
del(result)
predictresult <- predict(model, data[(1+nrow(train)):(nrow(data)), ], OOB=TRUE, type = "response")
predictresult
pr <- predict(model, data[1001:1309, ], OOB=TRUE, type = "response")
pr
output <- data.frame(name=test$name ,survived = pr)
View(model)
summary(pr)
pr <- predict(model, OOB=TRUE, type = "response")
summary(pr)
pr <- predict(model, test,  OOB=TRUE, type = "response")
summary(pr)
predict4 <- predict(model, test,  OOB=TRUE, type = "response")
summary(predict4)
View(train)
output <- data.frame(name=test$name ,survived = pr)
View(Question)
summary(test)
predict4 <- predict(model, test,  OOB=TRUE, type = "response")
test$survived <- predict4
predict4 <- predict(model, train,  OOB=TRUE, type = "response")
summary(predict4)
predict4 <- predict(model, Question,  OOB=TRUE, type = "response")
summary(predict4)
sapply(data,function(x) sum(is.na(x)))
