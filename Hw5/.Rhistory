library(bitops)
library(httr)
library(RCurl)
library(XML)
library(NLP)
library(tm)
library(tmcn)
library(jiebaRD)
library(jiebaR)
library(dplyr)
#抓取從大聯盟開季後到現在的 ptt 棒球版的貼文
for( i in c(6757:6910)){
tmp <- paste(i, '.html', sep='')
url <- paste('https://www.ptt.cc/bbs/Baseball/index', tmp, sep='')
html <- htmlParse(GET(url),encoding = "UTF-8")
title.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlValue)
url.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlAttrs)
data <- rbind(data, as.matrix(paste('www.ptt.cc', url.list, sep='')))
title <- rbind(title, as.matrix(title.list))
}
for( i in c(6757:6910)){
tmp <- paste(i, '.html', sep='')
url <- paste('https://www.ptt.cc/bbs/Baseball/index', tmp, sep='')
html <- htmlParse(GET(url),encoding = "UTF-8")
title.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlValue)
url.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlAttrs)
data <- rbind(data, as.matrix(paste('www.ptt.cc', url.list, sep='')))
title <- rbind(title, as.matrix(title.list))
}
# data 存網址  title 存標題
data <- unlist(data)
title <- unlist(title)
data <- list()
title <- list()
#抓取從明星賽後到現在的 ptt NBA版的貼文
for( i in c(5674:5810)){
tmp <- paste(i, '.html', sep='')
url <- paste('www.ptt.cc/bbs/NBA/index', tmp, sep='')
html <- htmlParse(GET(url),encoding = "UTF-8")
title.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlValue)
url.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlAttrs)
data <- rbind(data, as.matrix(paste('www.ptt.cc', url.list, sep='')))
title <- rbind(title, as.matrix(title.list))
}
# data 存網址  title 存標題
data <- unlist(data)
title <- unlist(title)
data <- list()
title <- list()
#抓取從大聯盟開季後到現在的 ptt 棒球版的貼文
for( i in c(6757:6910)){
tmp <- paste(i, '.html', sep='')
url <- paste('https://www.ptt.cc/bbs/Baseball/index', tmp, sep='')
html <- htmlParse(GET(url),encoding = "UTF-8")
title.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlValue)
url.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlAttrs)
data <- rbind(data, as.matrix(paste('www.ptt.cc', url.list, sep='')))
title <- rbind(title, as.matrix(title.list))
}
# data 存網址  title 存標題
data <- unlist(data)
title <- unlist(title)
o <- c()
o.url <- c()
# 找出有關鍵字的標題並分類
otani <- grep("大谷", title)
otanishohei <- grep("大谷翔平", title)
o <- c(otani,title[otani])
o <- c(otani,title[otanishohei])
o.url <- c(otani.url, data[otani])
data <- list()
title <- list()
#抓取從明星賽後到現在的 ptt NBA版的貼文
for( i in c(6757:6910)){
tmp <- paste(i, '.html', sep='')
url <- paste('www.ptt.cc/bbs/Baseball/index', tmp, sep='')
html <- htmlParse(GET(url),encoding = "UTF-8")
title.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlValue)
url.list <- xpathSApply(html, "//div[@class='title']/a[@href]", xmlAttrs)
data <- rbind(data, as.matrix(paste('www.ptt.cc', url.list, sep='')))
title <- rbind(title, as.matrix(title.list))
}
# data 存網址  title 存標題
data <- unlist(data)
title <- unlist(title)
# data 存網址  title 存標題
data <- unlist(data)
title <- unlist(title)
o <- c()
o.url <- c()
# 找出有關鍵字的標題並分類
o1 <- grep("大谷", title)
o <- c(o,title[o1])
o.url <- c(o.url, data[o1])
library(knitr)
message <- list()
cc = worker()
oTDF <- data.frame()
#爬取每篇有字母哥或是Giannis文章的留言
for(i in c(1:length(o))){
html <- htmlParse(GET(o.url[i]),encoding = "UTF-8")
message.list <- xpathSApply(html, "//div[@class='push']/span[@class='f3 push-content']", xmlValue)
message <- unlist(message.list)
d.corpus <- VCorpus( VectorSource(message) )
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
d.corpus <- tm_map(d.corpus, function(word) {
gsub("[A-Za-z0-9]", "", word)
})
abc <- data.frame(table(cc[as.character(d.corpus)]))
colnames(abc) <- c("word", as.character(i))
if(i == 1){
oTDF <- abc}
else{
oTDF <- merge(oTDF, abc, by = "word", all = T)}
}
oTDF[is.na(oTDF)] <- 0
kable(head(oTDF))
library(Matrix)
n <- length(o)
tf <- apply(as.matrix(oTDF[,2:(n+1)]), 2, sum)
#print(tf)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(oTDF[,2:(n+1)]), 1, idfCal)
#print(ncol(oTDF))
doc.tfidf <- oTDF
for(x in 1:nrow(oTDF))
{
for(y in 2:ncol(oTDF))
{
doc.tfidf[x,y] <- (doc.tfidf[x,y] / tf[y-1]) * idf[x]
}
}
topwords <- subset(head(doc.tfidf[order(doc.tfidf[2], decreasing = TRUE), ]), select = c(word,`1`))
for (i in c(3:ncol(doc.tfidf))){
topwords <- cbind(topwords, head(doc.tfidf[order(doc.tfidf[i], decreasing = TRUE),])[1])
topwords <- cbind(topwords, head(doc.tfidf[order(doc.tfidf[i], decreasing = TRUE),])[i])
}
kable(topwords)
library(wordcloud)
library(RColorBrewer)
library(wordcloud)
wordcloud(topwords, random.order = F, max.words = 40, scale = c(8, 0.5), colors = rainbow(50))
wordcloud(d.corpus, random.order = F, max.words = 40, scale = c(8, 0.5), colors = rainbow(50))
wordcloud(abc, random.order = F, max.words = 40, scale = c(8, 0.5), colors = rainbow(50))
wordcloud(message, random.order = F, max.words = 40, scale = c(8, 0.5), colors = rainbow(50))
wordcloud(o, random.order = F, max.words = 40, scale = c(8, 0.5), colors = rainbow(50))
