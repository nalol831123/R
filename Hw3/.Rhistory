library(httr)
library(RCurl)
install.packages("bitops")
install.packages("bitops")
library(RCurl)
library(bitops)
library(RCurl)
library(XML)
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(RCurl)
library(XML)
targeturl <- 'https://www.buy123.com.tw/site'
res <- getURL(targeturl)
res
res <- htmlParse(res)
res
title <- xpathSApply(res, '//*[@id="container"]/div[4]/section[2]/a[1]/figure/figcapion/h3', xmlValue)
title
library(swirl)
rm(list=ls())
swirl()
swirl()
swirl()
swirl()
bye()
library(XML)
library(xml2)
library(rvest)
install.packages("XML")
library(XML)
library(xml2)
library(rvest)
library(XML)
url <- "http://www.gomaji.com/index.php?city=Taipei&ref=396&gclid=EAIaIQobChMI--Ozs8vf2QIVhpS9Ch04BAAlEAAYASAAEgKSE_D_BwE&page=2"
read <- read_html(url, encoding = "UTF-8")
title4 <- html_text(html_nodes(read, "#lb_deal .ref_name_2"))
title4 <- html_text(html_nodes(read, "#lb_deal .ref_name_2"))
install.packages("selectr")
library(selectr)
title4 <- html_text(html_nodes(read, "#lb_deal .ref_name_2"))
title4
source('C:/Users/User/Desktop/R/R/Hw2/GomajiCraw.R')
library(rvest)
library(xml2)
library(rvest)
nba <-read_html("https://udn.com/news/cate/2/7227")
sport <-read_html("https://udn.com/news/cate/2/7227")
sport %>% html_nodes("//h2")
sport %>% html_nodes("chicon_07")
title <- html_nodes(sport,"chicon_07")
title
title <- html_nodes(sport,"p")
title
title <- html_nodes(sport,".chicon_07:nth-child(1) p")
title
nba <-read_html("https://nba.udn.com/nba/cate/6754/6780")
title <- html_nodes(nba,"#news_list_body h3")
title
NbaTitle <- html_text(title)
NbaTitle
Nbaurl = html_nodes(nba,"h3")
Nbaurl
title
Nbaurl = html_nodes(nba,"a , dt:nth-child(3) h3 , .h24")
Nbaurl
url <- html_attr(Nbaurl,"href")
url
library(rvest)
library(rvest)
nba <-read_html("https://nba.udn.com/nba/cate/6754/6780")
title <- html_nodes(nba,"#news_list_body h3")
NbaTitle <- html_text(title)
NbaTitle
library(httr)
library(RCurl)
library(XML)
library(gsubfn)
install.packages("bitops")
install.packages("bitops")
install.packages("gsubfn")
library(httr)
library(RCurl)
library(bitops)
install.packages("RCurl")
library(RCurl)
library(bitops)
library(RCurl)
library(XML)
library(gsubfn)
install.packages("proto")
install.packages("proto")
library(gsubfn)
library(proto)
library(gsubfn)
targeturl <- "https://www.buy123.com.tw/site"
targeturl <- "https://www.buy123.com.tw/site"
res <- getURL(targeturl, encoding="utf-8")
res <- htmlParse(res)
res
res <- getURL(targeturl, encoding="utf-8")
library(RCurl)
library(bitops)
library(RCurl)
res <- getURL(targeturl, encoding="utf-8")
res <- htmlParse(res)
library(XML)
res <- htmlParse(res)
res
xpath <- '//*[@id="container"]/div[4]/section[2]//a'
urls <- xpathSApply(res, path=xpath, xmlGetAttr, 'href')
urls
tmp = "https://www.buy123.com.tw"
urls <- paste0(tmp, urls)
urls
webpage_parser <- function(x, xpath){
res_tmp <- getURL(x, encoding="utf-8")
res_tmp <- htmlParse(res_tmp, encoding="UTF-8")
textdata <- xpathSApply(res_tmp, path = xpath, xmlValue)
}
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) +
geom_bar(fill = "blue", colour = "black")
ggplot(data = diamonds, aes(x = price)) +
geom_histogram()
ggplot(data = diamonds, aes(x = table, y=depth)) +
geom_point()
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(GGally)
library(scales)
library(memisc)
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp,lower= list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
install.packages("ggmap")
library(mapproj)
install.packages("maps")
install.packages("maps")
library(mapproj)
library(maps)
library(mapproj)
map <- get_map(location = c(lon = 121.5581794, lat = 25.0270206),zoom = 10, language = "zh-TW",maptype = "toner-lite")
library(ggmap)
library(ggplot2)
library(ggmap)
map <- get_map(location = c(lon = 121.5581794, lat = 25.0270206),zoom = 10, language = "zh-TW",maptype = "toner-lite")
ggmap(map)
ggmap(map, darken = c(0.5, "white"))
ggmap(map, darken = 0.5)
uv <- read.csv("UV_20180320220329.csv.csv")
setwd("C:/Users/User/Desktop/R/R/Hw3")
uv <- read.csv("UV_20180320220329.csv.csv")
library(readr)
UV_20180320220329 <- read_csv("UV_20180320220329.csv")
View(UV_20180320220329)
uv <- read.csv("UV_20180320220329.csv.csv")
uv <- UV_20180320220329
lon.deg <- sapply((strsplit(as.character(uv$WGS84Lon), ",")), as.numeric)
uv$lon <- lon.deg[1, ] + lon.deg[2, ]/60 + lon.deg[3, ]/3600
lat.deg <- sapply((strsplit(as.character(uv$WGS84Lat), ",")), as.numeric)
uv$lat <- lat.deg[1, ] + lat.deg[2, ]/60 + lat.deg[3, ]/3600
require(datasets)
head(airquality)
require(datasets)
head(airquality)
require(datasets)
head(airquality)
hist(x=airquality$Month,
main="Histogram of Month",
xlab="Month",
ylab="Frequency")
boxplot(formula = Ozone ~ Month,
data = airquality,
xlab = "Month",
ylab = "Ozone (ppb)",
col ="gray")
plot(x=airquality$Month,
y=airquality$Temp,
main="Month to Temperature",
xlab="Month(1~12)",
ylab="Temperature(degrees F)")
plot(x=airquality$Ozone,
y=airquality$Wind,
main="Ozone to Wind",
xlab="Ozone(ppb)",
ylab="Wind(mph)",
pch=16
)
May_data <- airquality[airquality$Month==5, ]
points(x=May_data$Ozone,
y=May_data$Wind,
pch=16,
col="blue")
May_data <- airquality[airquality$Month==5, ]
plot(x=airquality$Ozone,
y=airquality$Wind,
main="Ozone to Wind",
xlab="Ozone(ppb)",
ylab="Wind(mph)",
pch=16
)
points(x=May_data$Ozone,
y=May_data$Wind,
pch=16,
col="blue")
May_data <- airquality[airquality$Month==5, ]
Aug_data <- airquality[airquality$Month==8, ]
plot(x=airquality$Ozone,
y=airquality$Wind,
main="Ozone to Wind",
xlab="Ozone(ppb)",
ylab="Wind(mph)",
pch=16
)
points(x=May_data$Ozone,
y=May_data$Wind,
pch=16,
col="blue")
points(x=Aug_data$Ozone,
y=Aug_data$Wind,
pch=16,
col="red")
May_data <- airquality[airquality$Month==5, ]
Aug_data <- airquality[airquality$Month==8, ]
plot(x=airquality$Ozone,
y=airquality$Wind,
main="Ozone to Wind",
xlab="Ozone(ppb)",
ylab="Wind(mph)",
pch=16
)
points(x=May_data$Ozone,
y=May_data$Wind,
pch=16,
col="blue")
points(x=Aug_data$Ozone,
y=Aug_data$Wind,
pch=16,
col="red")
legend("topright",
pch = 1,
col = c("blue", "red", "black"),
legend = c("May", "August", "Other Month")
)
lm.model <- lm(Wind~Ozone, airquality)
abline(lm.model,lwd=2)
May_data <- airquality[airquality$Month==5, ]
Aug_data <- airquality[airquality$Month==8, ]
plot(x=airquality$Ozone,
y=airquality$Wind,
main="Ozone to Wind",
xlab="Ozone(ppb)",
ylab="Wind(mph)",
pch=16
)
points(x=May_data$Ozone,
y=May_data$Wind,
pch=16,
col="blue")
points(x=Aug_data$Ozone,
y=Aug_data$Wind,
pch=16,
col="red")
legend("topright",
pch = 1,
col = c("blue", "red", "black"),
legend = c("May", "August", "Other Month")
)
lm.model <- lm(Wind~Ozone, airquality)
abline(lm.model,lwd=5)
install.packages("lattice")
install.packages("lattice")
library(lattice)
airquality$Month <- as.factor(airquality$Month)
histogram(x= ~ Ozone | Month,
data=airquality,
xlab="Ozone(ppb)",
layout=c(5,1))
bwplot(x = Ozone ~ Month,
data = airquality,
xlab =
)
densityplot( ~ Ozone ,
data=airquality
)
cloud(x=Wind~Temp+Ozone | Month,
data=airquality
)
xyplot(x=Wind~Temp,         # Wind放在Y軸，Temp放在X軸
data=airquality,
group = Month,       # 根據Month，把資料點用顏色區分開來
# auto.key參數，表示設定標籤與其他資訊
auto.key=list(space="top",          # 位置在上方
columns=5,            # 1x5的方式呈現標籤
title="Month Labels", # 標籤名稱
cex.title=1)          # 標籤字體大小
)
library(ggplot2)
qplot(x=Ozone,
data=airquality,
geom="histogram",
main = "Histogram of Ozone",
xlab="Ozone(ppb)",
binwidth = 25,
fill= Month
)
qplot(x=Temp,
y=Ozone,
data=airquality,
geom="point",
main = "Scatter Plot of Ozone-Temp",
xlab="Temp",
ylab="Ozone(ppb)",
color= Month
)
qplot(x=Temp,
data=airquality,
geom="density",
xlab="Temp",
color= Month
)
canvas <- ggplot(data=airquality)
canvas +
geom_histogram(aes(x=Ozone,fill=Month))
canvas +
geom_histogram(aes(x=Ozone,fill=Month)) +
facet_grid(.~Month)
ggplot(data=airquality) +
geom_point(aes(x=Temp,
y=Ozone,
main="Scatter Plot of Ozone-Temp",
color=Month)
) +
geom_smooth(aes(x=Temp,
y=Ozone)) +
labs(title="Scatter of Temp-Ozone",
x="Temp",
y="Ozone") +
theme_bw()
set.seed(5)
diamonds.subset <- diamonds[sample(nrow(diamonds), 100), ]
qplot(carat, price, data = diamonds)
qplot(log(carat), log(price), data = diamonds)
qplot(carat, price, data = diamonds.subset, color = color)
qplot(carat, price, data = diamonds.subset, shape = cut)
qplot(carat, price, data = diamonds, alpha = I(1/100))
qplot(carat, price, data = diamonds.subset,
geom = c("point", "smooth"))
qplot(carat, price, data = diamonds,
geom = c("point", "smooth"))
qplot(color, price / carat, data = diamonds, geom = "jitter",
alpha = I(1 / 5), shape = cut)
qplot(date, unemploy / pop, data = economics, geom = "line")
qplot(date, unemploy / pop, data = economics, geom = "line")
qplot(unemploy / pop, uempmed, data = economics,
geom = c("point", "path"))
qplot(carat, data = diamonds, facets = color ~ cut,
geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
mtcars$gear <- factor(mtcars$gear,levels=c(3, 4, 5),
labels=c("3gears", "4gears", "5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0, 1),
labels=c("Automatic", "Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4, 6, 8),
labels=c("4cyl", "6cyl", "8cyl"))
qplot(mpg, data = mtcars, geom = "density",
fill = gear, alpha = I(.5),
main="Distribution of Gas Milage",
xlab="Miles Per Gallon",
ylab="Density")
